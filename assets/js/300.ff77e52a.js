(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{539:function(a,t,s){"use strict";s.r(t);var r=s(6),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"快手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快手"}},[a._v("#")]),a._v(" 快手")]),a._v(" "),s("h2",{attrs:{id:"一面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[a._v("#")]),a._v(" 一面")]),a._v(" "),s("h3",{attrs:{id:"react-16-新增了那些生命周期函数-有什么作用-为什么去掉某些-15-的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-16-新增了那些生命周期函数-有什么作用-为什么去掉某些-15-的生命周期"}},[a._v("#")]),a._v(" react 16 新增了那些生命周期函数，有什么作用，为什么去掉某些 15 的生命周期")]),a._v(" "),s("h3",{attrs:{id:"fiber-原理-如何实现异步渲染-链表-可中断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fiber-原理-如何实现异步渲染-链表-可中断"}},[a._v("#")]),a._v(" fiber 原理，如何实现异步渲染（链表/可中断）")]),a._v(" "),s("h3",{attrs:{id:"redux-和-redux-saga-的区别和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-和-redux-saga-的区别和原理"}},[a._v("#")]),a._v(" redux 和 redux-saga 的区别和原理")]),a._v(" "),s("h3",{attrs:{id:"项目中用到的-saga-duck-是什么东西"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目中用到的-saga-duck-是什么东西"}},[a._v("#")]),a._v(" 项目中用到的 saga-duck 是什么东西")]),a._v(" "),s("h3",{attrs:{id:"useeffect-的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useeffect-的实现原理"}},[a._v("#")]),a._v(" useEffect 的实现原理")]),a._v(" "),s("h3",{attrs:{id:"异步渲染和旧版的-diff-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步渲染和旧版的-diff-的区别"}},[a._v("#")]),a._v(" 异步渲染和旧版的 diff 的区别")]),a._v(" "),s("h3",{attrs:{id:"babel-实现转码的过程-词法、语法分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-实现转码的过程-词法、语法分析"}},[a._v("#")]),a._v(" babel 实现转码的过程（词法、语法分析）")]),a._v(" "),s("h3",{attrs:{id:"项目技术栈怎么选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目技术栈怎么选型"}},[a._v("#")]),a._v(" 项目技术栈怎么选型")]),a._v(" "),s("h3",{attrs:{id:"小程序底层实现原理了解多少-双线程模型-预加载webview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小程序底层实现原理了解多少-双线程模型-预加载webview"}},[a._v("#")]),a._v(" 小程序底层实现原理了解多少（双线程模型/预加载Webview）")]),a._v(" "),s("h3",{attrs:{id:"项目-nodejs-应用异常退出如何处理-pm2-uncaughtexception-事件等-、日志上报怎么做-输出重定向到文件-elk服务传到kibana"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目-nodejs-应用异常退出如何处理-pm2-uncaughtexception-事件等-、日志上报怎么做-输出重定向到文件-elk服务传到kibana"}},[a._v("#")]),a._v(" 项目 nodejs 应用异常退出如何处理（pm2/uncaughtException 事件等）、日志上报怎么做（输出重定向到文件，elk服务传到kibana）")]),a._v(" "),s("h3",{attrs:{id:"graphic-schema-怎么设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphic-schema-怎么设计"}},[a._v("#")]),a._v(" graphic schema 怎么设计")]),a._v(" "),s("h3",{attrs:{id:"有哪些技术驱动业务的案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些技术驱动业务的案例"}},[a._v("#")]),a._v(" 有哪些技术驱动业务的案例")]),a._v(" "),s("h3",{attrs:{id:"算法-最大乘积子序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法-最大乘积子序列"}},[a._v("#")]),a._v(" 算法："),s("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-product-subarray/",target:"_blank",rel:"noopener noreferrer"}},[a._v("最大乘积子序列"),s("OutboundLink")],1)]),a._v(" "),s("h1",{attrs:{id:"拼多多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拼多多"}},[a._v("#")]),a._v(" 拼多多")]),a._v(" "),s("h2",{attrs:{id:"一面-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面-2"}},[a._v("#")]),a._v(" 一面")]),a._v(" "),s("h3",{attrs:{id:"redux-理念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-理念"}},[a._v("#")]),a._v(" redux 理念")]),a._v(" "),s("h3",{attrs:{id:"react-redux-中-connect-怎么实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-中-connect-怎么实现"}},[a._v("#")]),a._v(" react-redux 中 connect 怎么实现")]),a._v(" "),s("h3",{attrs:{id:"mixin、hoc、继承的区别、优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mixin、hoc、继承的区别、优缺点"}},[a._v("#")]),a._v(" mixin、hoc、继承的区别、优缺点")]),a._v(" "),s("h3",{attrs:{id:"react-diff-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-diff-实现"}},[a._v("#")]),a._v(" react diff 实现")]),a._v(" "),s("h3",{attrs:{id:"react-旧版的diff用深度优先还是广度优先。为什么用深度优先-广度优先能实现吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-旧版的diff用深度优先还是广度优先。为什么用深度优先-广度优先能实现吗"}},[a._v("#")]),a._v(" react 旧版的diff用深度优先还是广度优先。为什么用深度优先，广度优先能实现吗")]),a._v(" "),s("h3",{attrs:{id:"diff的时间复杂度-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff的时间复杂度-为什么"}},[a._v("#")]),a._v(" diff的时间复杂度？为什么？")]),a._v(" "),s("p",[a._v("O(n)")]),a._v(" "),s("p",[a._v("react 从 O(n3) -> O(n)")]),a._v(" "),s("h3",{attrs:{id:"react-router-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-router-实现原理"}},[a._v("#")]),a._v(" react-router 实现原理")]),a._v(" "),s("h3",{attrs:{id:"客户端路由-hash-history-实现的区别、原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端路由-hash-history-实现的区别、原理"}},[a._v("#")]),a._v(" 客户端路由 hash/history 实现的区别、原理")]),a._v(" "),s("h3",{attrs:{id:"有哪些常见的-http-头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的-http-头"}},[a._v("#")]),a._v(" 有哪些常见的 http 头")]),a._v(" "),s("h3",{attrs:{id:"websocket-轮询的好处缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket-轮询的好处缺点"}},[a._v("#")]),a._v(" websocket 轮询的好处缺点")]),a._v(" "),s("h3",{attrs:{id:"websocket-握手的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket-握手的过程"}},[a._v("#")]),a._v(" websocket 握手的过程")]),a._v(" "),s("h3",{attrs:{id:"tcp-握手过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-握手过程"}},[a._v("#")]),a._v(" tcp 握手过程")]),a._v(" "),s("h3",{attrs:{id:"tcp-udp-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp-的区别"}},[a._v("#")]),a._v(" tcp/udp 的区别")]),a._v(" "),s("h3",{attrs:{id:"尽可能多实现pdd-app-导航布局实现-4等分div并列排布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#尽可能多实现pdd-app-导航布局实现-4等分div并列排布"}},[a._v("#")]),a._v(" 尽可能多实现pdd app 导航布局实现（4等分div并列排布）")]),a._v(" "),s("h3",{attrs:{id:"如何清除浮动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何清除浮动"}},[a._v("#")]),a._v(" 如何清除浮动")]),a._v(" "),s("h3",{attrs:{id:"bfc-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfc-实现原理"}},[a._v("#")]),a._v(" BFC 实现原理")]),a._v(" "),s("h3",{attrs:{id:"开放题-pdd-假设没有首页优化-尽可能想办法优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开放题-pdd-假设没有首页优化-尽可能想办法优化"}},[a._v("#")]),a._v(" 开放题：pdd 假设没有首页优化，尽可能想办法优化")]),a._v(" "),s("h2",{attrs:{id:"二面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[a._v("#")]),a._v(" 二面")]),a._v(" "),s("h3",{attrs:{id:"css盒子模型-content-box、border-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css盒子模型-content-box、border-box"}},[a._v("#")]),a._v(" css盒子模型（content-box、border-box）")]),a._v(" "),s("h3",{attrs:{id:"实现动画有哪些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现动画有哪些方法"}},[a._v("#")]),a._v(" 实现动画有哪些方法")]),a._v(" "),s("h3",{attrs:{id:"react-mixin-hoc-以及-hook-之间的区别和优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-mixin-hoc-以及-hook-之间的区别和优缺点"}},[a._v("#")]),a._v(" react mixin hoc 以及 hook 之间的区别和优缺点")]),a._v(" "),s("h3",{attrs:{id:"浏览器渲染出一个页面的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染出一个页面的过程"}},[a._v("#")]),a._v(" 浏览器渲染出一个页面的过程")]),a._v(" "),s("h3",{attrs:{id:"vue-react-技术选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-react-技术选型"}},[a._v("#")]),a._v(" vue/react 技术选型")]),a._v(" "),s("h3",{attrs:{id:"项目相关-重构开发如何并行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目相关-重构开发如何并行"}},[a._v("#")]),a._v(" 项目相关，重构开发如何并行")]),a._v(" "),s("h3",{attrs:{id:"项目中工程化进行了哪些优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目中工程化进行了哪些优化"}},[a._v("#")]),a._v(" 项目中工程化进行了哪些优化")]),a._v(" "),s("h3",{attrs:{id:"项目中进行优化会从哪方面去做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目中进行优化会从哪方面去做"}},[a._v("#")]),a._v(" 项目中进行优化会从哪方面去做")]),a._v(" "),s("h3",{attrs:{id:"nodejs-性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-性能优化"}},[a._v("#")]),a._v(" nodejs 性能优化")]),a._v(" "),s("h3",{attrs:{id:"linux-文件权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件权限"}},[a._v("#")]),a._v(" linux 文件权限")]),a._v(" "),s("h3",{attrs:{id:"前端监控怎么实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端监控怎么实现"}},[a._v("#")]),a._v(" 前端监控怎么实现")]),a._v(" "),s("h1",{attrs:{id:"虾皮"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虾皮"}},[a._v("#")]),a._v(" 虾皮")]),a._v(" "),s("h2",{attrs:{id:"一面-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面-3"}},[a._v("#")]),a._v(" 一面")]),a._v(" "),s("h3",{attrs:{id:"http-302-301-307-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-302-301-307-的区别"}},[a._v("#")]),a._v(" http 302 301 307 的区别")]),a._v(" "),s("h3",{attrs:{id:"_301-和-302-哪个对-seo-更友好-301"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_301-和-302-哪个对-seo-更友好-301"}},[a._v("#")]),a._v(" 301 和 302 哪个对 seo 更友好（301）")]),a._v(" "),s("h3",{attrs:{id:"跨域是什么、如何解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域是什么、如何解决"}},[a._v("#")]),a._v(" 跨域是什么、如何解决")]),a._v(" "),s("h3",{attrs:{id:"jsonp-有什么缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-有什么缺点"}},[a._v("#")]),a._v(" jsonp 有什么缺点")]),a._v(" "),s("h3",{attrs:{id:"base64和外链的应用场景-各自的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base64和外链的应用场景-各自的优缺点"}},[a._v("#")]),a._v(" base64和外链的应用场景，各自的优缺点")]),a._v(" "),s("h3",{attrs:{id:"http缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http缓存机制"}},[a._v("#")]),a._v(" http缓存机制")]),a._v(" "),s("h3",{attrs:{id:"https-的握手过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-的握手过程"}},[a._v("#")]),a._v(" https 的握手过程")]),a._v(" "),s("h3",{attrs:{id:"set-map-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-map-的区别"}},[a._v("#")]),a._v(" set/map 的区别")]),a._v(" "),s("h3",{attrs:{id:"hook-的局限性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hook-的局限性"}},[a._v("#")]),a._v(" hook 的局限性")]),a._v(" "),s("h3",{attrs:{id:"setstate-和-hook-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate-和-hook-的区别"}},[a._v("#")]),a._v(" setState 和 hook 的区别")]),a._v(" "),s("h3",{attrs:{id:"decorator-的作用-编译后是什么样子的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decorator-的作用-编译后是什么样子的"}},[a._v("#")]),a._v(" decorator 的作用，编译后是什么样子的")]),a._v(" "),s("h3",{attrs:{id:"symbol-是什么-一般用来做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol-是什么-一般用来做什么"}},[a._v("#")]),a._v(" symbol 是什么，一般用来做什么")]),a._v(" "),s("h3",{attrs:{id:"csrf-是什么-如何防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf-是什么-如何防范"}},[a._v("#")]),a._v(" csrf 是什么，如何防范")]),a._v(" "),s("h3",{attrs:{id:"sql注入是什么-如何防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql注入是什么-如何防范"}},[a._v("#")]),a._v(" sql注入是什么，如何防范")]),a._v(" "),s("h3",{attrs:{id:"react-调用-setstate-之后发生什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-调用-setstate-之后发生什么"}},[a._v("#")]),a._v(" react 调用 setState 之后发生什么")]),a._v(" "),s("h3",{attrs:{id:"nodejs-事件循环机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-事件循环机制"}},[a._v("#")]),a._v(" nodejs 事件循环机制")]),a._v(" "),s("h3",{attrs:{id:"pm2原理-有哪些模式-cluster-fork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2原理-有哪些模式-cluster-fork"}},[a._v("#")]),a._v(" pm2原理，有哪些模式（cluster fork）")]),a._v(" "),s("h3",{attrs:{id:"docker-和-k8s-有了解多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-和-k8s-有了解多少"}},[a._v("#")]),a._v(" docker 和 k8s 有了解多少")]),a._v(" "),s("h3",{attrs:{id:"移动端一个元素的拖动-如何实现和优化-节流-改变位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动端一个元素的拖动-如何实现和优化-节流-改变位置"}},[a._v("#")]),a._v(" 移动端一个元素的拖动，如何实现和优化（节流，改变位置）")]),a._v(" "),s("h3",{attrs:{id:"for-in-for-of-看代码输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in-for-of-看代码输出"}},[a._v("#")]),a._v(" for in / for of 看代码输出")]),a._v(" "),s("h3",{attrs:{id:"描述链表的反转如何实现-复杂度多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述链表的反转如何实现-复杂度多少"}},[a._v("#")]),a._v(" 描述链表的反转如何实现，复杂度多少")]),a._v(" "),s("h3",{attrs:{id:"实现-instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-instanceof"}},[a._v("#")]),a._v(" 实现 "),s("code",[a._v("instanceof")])]),a._v(" "),s("h3",{attrs:{id:"实现一个对象被-for-of-遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个对象被-for-of-遍历"}},[a._v("#")]),a._v(" 实现一个对象被 "),s("code",[a._v("for of")]),a._v(" 遍历")]),a._v(" "),s("h3",{attrs:{id:"实现链表的添加、删除。复杂度是多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现链表的添加、删除。复杂度是多少"}},[a._v("#")]),a._v(" 实现链表的添加、删除。复杂度是多少")]),a._v(" "),s("h2",{attrs:{id:"二面-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面-2"}},[a._v("#")]),a._v(" 二面")]),a._v(" "),s("h3",{attrs:{id:"给两段效果上都可以实现继承的代码-说出差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给两段效果上都可以实现继承的代码-说出差异"}},[a._v("#")]),a._v(" 给两段效果上都可以实现继承的代码，说出差异")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\nchild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype\nchild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h3",{attrs:{id:"this-输出问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-输出问题"}},[a._v("#")]),a._v(" this 输出问题")]),a._v(" "),s("h3",{attrs:{id:"如何监听-html-外链资源加载失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何监听-html-外链资源加载失败"}},[a._v("#")]),a._v(" 如何监听 html 外链资源加载失败")]),a._v(" "),s("h3",{attrs:{id:"mutation-observer、intersection-observer-使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutation-observer、intersection-observer-使用场景"}},[a._v("#")]),a._v(" "),s("code",[a._v("Mutation Observer")]),a._v("、"),s("code",[a._v("Intersection Observer")]),a._v(" 使用场景")]),a._v(" "),s("h3",{attrs:{id:"_127-0-0-1-和-0-0-0-0-差别-一个只能通过-localhost-另一个可以通过本机-ip-或者-localhost-都可以"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_127-0-0-1-和-0-0-0-0-差别-一个只能通过-localhost-另一个可以通过本机-ip-或者-localhost-都可以"}},[a._v("#")]),a._v(" "),s("code",[a._v("127.0.0.1")]),a._v(" 和 "),s("code",[a._v("0.0.0.0")]),a._v(" 差别（一个只能通过 "),s("code",[a._v("localhost")]),a._v(" ，另一个可以通过本机 ip 或者 localhost 都可以）")]),a._v(" "),s("h3",{attrs:{id:"利用-promise-js-sleep-函数实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用-promise-js-sleep-函数实现"}},[a._v("#")]),a._v(" 利用 Promise js sleep 函数实现")]),a._v(" "),s("h3",{attrs:{id:"jsx-转换后是什么样子的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx-转换后是什么样子的"}},[a._v("#")]),a._v(" jsx 转换后是什么样子的")]),a._v(" "),s("h3",{attrs:{id:"redux-compose-函数是做什么的-中间件呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-compose-函数是做什么的-中间件呢"}},[a._v("#")]),a._v(" redux compose 函数是做什么的，中间件呢")]),a._v(" "),s("h3",{attrs:{id:"redux-sage-是什么-和-redux-thunk-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-sage-是什么-和-redux-thunk-有什么区别"}},[a._v("#")]),a._v(" redux-sage 是什么，和 redux-thunk 有什么区别")]),a._v(" "),s("h3",{attrs:{id:"dva-了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dva-了解吗"}},[a._v("#")]),a._v(" dva 了解吗")]),a._v(" "),s("h3",{attrs:{id:"umi-js-有用过吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#umi-js-有用过吗"}},[a._v("#")]),a._v(" umi.js 有用过吗")]),a._v(" "),s("h3",{attrs:{id:"req-pipe-res"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#req-pipe-res"}},[a._v("#")]),a._v(" req.pipe(res)")]),a._v(" "),s("h3",{attrs:{id:"stream-如何处理数据消费和数据生产的速率不一致问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream-如何处理数据消费和数据生产的速率不一致问题"}},[a._v("#")]),a._v(" stream 如何处理数据消费和数据生产的速率不一致问题")]),a._v(" "),s("h3",{attrs:{id:"writeable-stream-drain-事件是做什么的-这是和一个控制读写速率有关的事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeable-stream-drain-事件是做什么的-这是和一个控制读写速率有关的事件"}},[a._v("#")]),a._v(" writeable stream drain 事件是做什么的（这是和一个控制读写速率有关的事件）")]),a._v(" "),s("h1",{attrs:{id:"字节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节"}},[a._v("#")]),a._v(" 字节")]),a._v(" "),s("h2",{attrs:{id:"一面-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面-4"}},[a._v("#")]),a._v(" 一面")]),a._v(" "),s("h3",{attrs:{id:"常用的-http-状态码-101-200-204-301-302-304-307-400-404-500"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的-http-状态码-101-200-204-301-302-304-307-400-404-500"}},[a._v("#")]),a._v(" 常用的 http 状态码（101 200 204 301 302 304 307 400 404 500）")]),a._v(" "),s("h3",{attrs:{id:"_301-和-302-的区别-永久-临时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_301-和-302-的区别-永久-临时"}},[a._v("#")]),a._v(" 301 和 302 的区别（永久/临时）")]),a._v(" "),s("h3",{attrs:{id:"前端路由如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由如何实现"}},[a._v("#")]),a._v(" 前端路由如何实现")]),a._v(" "),s("h3",{attrs:{id:"前端路由刷新404如何处理-404时重定向到index-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由刷新404如何处理-404时重定向到index-html"}},[a._v("#")]),a._v(" 前端路由刷新404如何处理（404时重定向到index.html）")]),a._v(" "),s("h3",{attrs:{id:"从前端到后端全链路如何设计一个登录的流程-session-方案、jwt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从前端到后端全链路如何设计一个登录的流程-session-方案、jwt"}},[a._v("#")]),a._v(" 从前端到后端全链路如何设计一个登录的流程（session 方案、jwt）")]),a._v(" "),s("h3",{attrs:{id:"什么是跨域-怎样处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域-怎样处理"}},[a._v("#")]),a._v(" 什么是跨域，怎样处理")]),a._v(" "),s("h3",{attrs:{id:"简单请求、复杂请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单请求、复杂请求"}},[a._v("#")]),a._v(" 简单请求、复杂请求")]),a._v(" "),s("h3",{attrs:{id:"浏览器的缓存策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的缓存策略"}},[a._v("#")]),a._v(" 浏览器的缓存策略")]),a._v(" "),s("h3",{attrs:{id:"domain-属性解决跨域-几种domain设置对跨域是否生效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domain-属性解决跨域-几种domain设置对跨域是否生效"}},[a._v("#")]),a._v(" domain 属性解决跨域，几种domain设置对跨域是否生效")]),a._v(" "),s("h3",{attrs:{id:"ts泛型做什么的-infer关键字的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ts泛型做什么的-infer关键字的作用"}},[a._v("#")]),a._v(" ts泛型做什么的，infer关键字的作用")]),a._v(" "),s("h3",{attrs:{id:"实现-typescript-的-paramters、returntype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-typescript-的-paramters、returntype"}},[a._v("#")]),a._v(" 实现 typescript 的 Paramters、ReturnType")]),a._v(" "),s("h3",{attrs:{id:"实现-promise-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-promise-all"}},[a._v("#")]),a._v(" 实现 Promise.all")]),a._v(" "),s("h3",{attrs:{id:"实现一个并发请求控制函数-限制并发数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个并发请求控制函数-限制并发数"}},[a._v("#")]),a._v(" 实现一个并发请求控制函数，限制并发数")]),a._v(" "),s("h2",{attrs:{id:"二面-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面-3"}},[a._v("#")]),a._v(" 二面")]),a._v(" "),s("h3",{attrs:{id:"jwt-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jwt-原理"}},[a._v("#")]),a._v(" jwt 原理")]),a._v(" "),s("h3",{attrs:{id:"xss和csrf防范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss和csrf防范"}},[a._v("#")]),a._v(" xss和csrf防范")]),a._v(" "),s("h3",{attrs:{id:"purecomponent-和-component-区别-前者-shouldcomponentupdate-默认比较-props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent-和-component-区别-前者-shouldcomponentupdate-默认比较-props"}},[a._v("#")]),a._v(" pureComponent 和 Component 区别（前者 shouldComponentUpdate 默认比较 props）")]),a._v(" "),s("h3",{attrs:{id:"react-hook-hoc-解决了什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-hook-hoc-解决了什么问题"}},[a._v("#")]),a._v(" react hook hoc 解决了什么问题")]),a._v(" "),s("h3",{attrs:{id:"有哪些常用的-hook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常用的-hook"}},[a._v("#")]),a._v(" 有哪些常用的 hook")]),a._v(" "),s("h3",{attrs:{id:"项目实现一个中间层的意义-前端全链路日志打通"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目实现一个中间层的意义-前端全链路日志打通"}},[a._v("#")]),a._v(" 项目实现一个中间层的意义（前端全链路日志打通）")]),a._v(" "),s("h3",{attrs:{id:"setstate-同步还是异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate-同步还是异步"}},[a._v("#")]),a._v(" setState 同步还是异步")]),a._v(" "),s("h3",{attrs:{id:"setstate-传递对象和函数有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate-传递对象和函数有什么区别"}},[a._v("#")]),a._v(" setState 传递对象和函数有什么区别")]),a._v(" "),s("h3",{attrs:{id:"合成事件是怎样的-有什么好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成事件是怎样的-有什么好处"}},[a._v("#")]),a._v(" 合成事件是怎样的，有什么好处")]),a._v(" "),s("h3",{attrs:{id:"事件冒泡和事件捕获的区别-react中的冒泡和捕获-react-都是合成事件-无论是冒泡还是捕获-都对应原生中的冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡和事件捕获的区别-react中的冒泡和捕获-react-都是合成事件-无论是冒泡还是捕获-都对应原生中的冒泡"}},[a._v("#")]),a._v(" 事件冒泡和事件捕获的区别，react中的冒泡和捕获（react 都是合成事件，无论是冒泡还是捕获，都对应原生中的冒泡）")]),a._v(" "),s("h3",{attrs:{id:"水平垂直居中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中"}},[a._v("#")]),a._v(" 水平垂直居中")]),a._v(" "),s("h3",{attrs:{id:"手写-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手写-bind"}},[a._v("#")]),a._v(" 手写 bind")]),a._v(" "),s("h3",{attrs:{id:"实现快排"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现快排"}},[a._v("#")]),a._v(" 实现快排")]),a._v(" "),s("h2",{attrs:{id:"三面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三面"}},[a._v("#")]),a._v(" 三面")]),a._v(" "),s("h3",{attrs:{id:"graphql-相比-restful-的区别-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphql-相比-restful-的区别-优缺点"}},[a._v("#")]),a._v(" graphql 相比 restful 的区别，优缺点")]),a._v(" "),s("h3",{attrs:{id:"为啥选择了redux-saga作为解决方案-解决异步优雅-提供很多工具函数-。redux的异步中间件方案有哪些-对比。saga对比dva"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为啥选择了redux-saga作为解决方案-解决异步优雅-提供很多工具函数-。redux的异步中间件方案有哪些-对比。saga对比dva"}},[a._v("#")]),a._v(" 为啥选择了"),s("code",[a._v("redux-saga")]),a._v("作为解决方案(解决异步优雅/提供很多工具函数)。"),s("code",[a._v("redux")]),a._v("的异步中间件方案有哪些，对比。"),s("code",[a._v("saga")]),a._v("对比"),s("code",[a._v("dva")]),a._v("？")]),a._v(" "),s("h3",{attrs:{id:"graphql的鉴权在哪里做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphql的鉴权在哪里做"}},[a._v("#")]),a._v(" graphql的鉴权在哪里做")]),a._v(" "),s("h3",{attrs:{id:"协程是什么-语言层面实现的并发-go-nodejs怎样去实现协程-go使用go关键字、node可以使用generator实现、我理解react16的异步渲染也是协程的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协程是什么-语言层面实现的并发-go-nodejs怎样去实现协程-go使用go关键字、node可以使用generator实现、我理解react16的异步渲染也是协程的实现"}},[a._v("#")]),a._v(" 协程是什么（语言层面实现的并发），Go/nodeJs怎样去实现协程（Go使用go关键字、"),s("code",[a._v("node")]),a._v("可以使用"),s("code",[a._v("Generator")]),a._v("实现、我理解"),s("code",[a._v("react")]),a._v("16的异步渲染也是协程的实现）")]),a._v(" "),s("h3",{attrs:{id:"react-fiber的机制是怎样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber的机制是怎样的"}},[a._v("#")]),a._v(" "),s("code",[a._v("react")]),a._v(" "),s("code",[a._v("fiber")]),a._v("的机制是怎样的")]),a._v(" "),s("h3",{attrs:{id:"锁机制的作用-node和go如何处理死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁机制的作用-node和go如何处理死锁"}},[a._v("#")]),a._v(" 锁机制的作用，node和Go如何处理死锁")]),a._v(" "),s("h3",{attrs:{id:"go-node实现并发怎么做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go-node实现并发怎么做"}},[a._v("#")]),a._v(" Go/node实现并发怎么做")]),a._v(" "),s("h3",{attrs:{id:"node和go的优缺点怎样理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node和go的优缺点怎样理解"}},[a._v("#")]),a._v(" node和Go的优缺点怎样理解")]),a._v(" "),s("h3",{attrs:{id:"实现一个-usestate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-usestate"}},[a._v("#")]),a._v(" 实现一个 useState")])])}),[],!1,null,null,null);t.default=e.exports}}]);