(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{307:function(t,a,v){"use strict";v.r(a);var _=v(6),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),v("p",[t._v("本文讲解 JavaScript 各种继承的实现方式和优缺点。")]),t._v(" "),v("p",[t._v("本文更像是一份笔记，因为红宝书写的太好了。")]),t._v(" "),v("h1",{attrs:{id:"原型链继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承"}},[t._v("#")]),t._v(" 原型链继承")]),t._v(" "),v("ul",[v("li",[t._v("缺点：\n"),v("ul",[v("li",[t._v("引用类型的属性被所有实例共享")]),t._v(" "),v("li",[t._v("创建子类时，无法向父类传参")])])])]),t._v(" "),v("h1",{attrs:{id:"借用构造函数-经典继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数-经典继承"}},[t._v("#")]),t._v(" 借用构造函数（经典继承）")]),t._v(" "),v("ul",[v("li",[t._v("优点：\n"),v("ul",[v("li",[t._v("避免了引用类型的属性所有实例共享")]),t._v(" "),v("li",[t._v("子类可以给父类传参")])])]),t._v(" "),v("li",[t._v("缺点：方法都在构造函数中定义，每次创建实例的时候都会创建一遍方法")])]),t._v(" "),v("h1",{attrs:{id:"组合继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组合继承"}},[t._v("#")]),t._v(" 组合继承")]),t._v(" "),v("ul",[v("li",[t._v("优点：解决了原型链继承和构造函数继承的问题")]),t._v(" "),v("li",[t._v("缺点：调用了两次父类的构造函数")])]),t._v(" "),v("h1",{attrs:{id:"寄生组合继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合继承"}},[t._v("#")]),t._v(" 寄生组合继承")]),t._v(" "),v("ul",[v("li",[t._v("优点：完美继承")]),t._v(" "),v("li",[t._v("缺点：实现比较麻烦")])])])}),[],!1,null,null,null);a.default=r.exports}}]);