(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{465:function(t,n,s){"use strict";s.r(n);var e=s(6),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"深信服"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深信服"}},[t._v("#")]),t._v(" 深信服")]),t._v(" "),s("h2",{attrs:{id:"一面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[t._v("#")]),t._v(" 一面")]),t._v(" "),s("ul",[s("li",[t._v("自我介绍")]),t._v(" "),s("li",[t._v("最成功的项目")]),t._v(" "),s("li",[t._v("Webpack 打包优化有哪些方法")]),t._v(" "),s("li",[t._v("如何优化页面性能")]),t._v(" "),s("li",[t._v("Webpack 的热更行原理")]),t._v(" "),s("li",[t._v("JS 是如何执行的（事件循环）")]),t._v(" "),s("li",[t._v("ES6 的 Map、Set 等数据结构和 Object、Array 的区别")]),t._v(" "),s("li",[t._v("reduce 的作用")]),t._v(" "),s("li",[t._v("防抖节流的作用、原理和实现方式")]),t._v(" "),s("li",[t._v("算法："),s("a",{attrs:{href:"https://leetcode-cn.com/problems/climbing-stairs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("爬楼梯"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"二面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("实现题")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 题目：实现一个对树型结构进行过滤的函数，其中树形结构的格式如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' tree = [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     {name: 'A'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     {name: 'B', children: [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '         {name: 'A'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '         {name: 'AA', children: [...]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     ]},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     {name: 'C'}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' 1. 假设我输入的 str 为 A 则过滤后返回的结果为")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  {name: 'A'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  {name: 'B', children: [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    {name: 'A'}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  ]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' 2. 假设我输入的 str 为 AA 则过滤后返回的结果为")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     {name: 'B', children: [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '         {name: 'AA', children: [...]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     ]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' 3. 假设我输入的 str 为 B 则过滤后返回的结果为")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     {name: 'B', children: [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '         {name: 'A'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '         {name: 'AA', children: [...]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '     ]}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ' ]")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现该函数，要求不允许对原有的tree做任何修改，最终返回结果是一棵新结构出来的树")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("项目中迁移 ts 的实现")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);